
package ua.com.zetweb.tracktime.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "TimeCatcherService", targetNamespace = "http://tracktime.zetweb.com.ua/ws-test/", wsdlLocation = "file:/home/dimon/Development/EclipseWorkspace/Mars/TimeTracker/set-2.wsdl")
public class TimeCatcherService
    extends Service
{

    private final static URL TIMECATCHERSERVICE_WSDL_LOCATION;
    private final static WebServiceException TIMECATCHERSERVICE_EXCEPTION;
    private final static QName TIMECATCHERSERVICE_QNAME = new QName("http://tracktime.zetweb.com.ua/ws-test/", "TimeCatcherService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/dimon/Development/EclipseWorkspace/Mars/TimeTracker/set-2.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        TIMECATCHERSERVICE_WSDL_LOCATION = url;
        TIMECATCHERSERVICE_EXCEPTION = e;
    }

    public TimeCatcherService() {
        super(__getWsdlLocation(), TIMECATCHERSERVICE_QNAME);
    }

    public TimeCatcherService(WebServiceFeature... features) {
        super(__getWsdlLocation(), TIMECATCHERSERVICE_QNAME, features);
    }

    public TimeCatcherService(URL wsdlLocation) {
        super(wsdlLocation, TIMECATCHERSERVICE_QNAME);
    }

    public TimeCatcherService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TIMECATCHERSERVICE_QNAME, features);
    }

    public TimeCatcherService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TimeCatcherService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns TimeCatcherInterface
     */
    @WebEndpoint(name = "TimeCatcherEndpoint")
    public TimeCatcherInterface getTimeCatcherEndpoint() {
        return super.getPort(new QName("http://tracktime.zetweb.com.ua/ws-test/", "TimeCatcherEndpoint"), TimeCatcherInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns TimeCatcherInterface
     */
    @WebEndpoint(name = "TimeCatcherEndpoint")
    public TimeCatcherInterface getTimeCatcherEndpoint(WebServiceFeature... features) {
        return super.getPort(new QName("http://tracktime.zetweb.com.ua/ws-test/", "TimeCatcherEndpoint"), TimeCatcherInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TIMECATCHERSERVICE_EXCEPTION!= null) {
            throw TIMECATCHERSERVICE_EXCEPTION;
        }
        return TIMECATCHERSERVICE_WSDL_LOCATION;
    }

}
